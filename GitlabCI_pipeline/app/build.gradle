apply plugin: 'com.android.application'
apply plugin: 'org.jetbrains.kotlin.android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-parcelize'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'
apply plugin: 'com.google.firebase.appdistribution'


apply from: "$project.rootDir/build_config/dependencies.gradle"
apply from: "$project.rootDir/version.gradle"

android {
    compileSdkVersion appCompileSdk

    defaultConfig {
        applicationId "com.cryptoexchange.mobile"
        minSdkVersion appMinSdk
        targetSdkVersion appTargetSdk
        versionCode appVersionCode
        versionName appVersionName

        buildConfigField "String", "DEV_UNITEX", "\"https://dev-markets-pub-new.otcdesk.ch/\""
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    lintOptions {
        lintConfig file("$project.rootDir/build_config/internal_lint.xml")
    }

    buildFeatures {
        viewBinding true
    }

    signingConfigs {

        debug {
            //TODO change for debug keys after creating release host
            storeFile file('../crypto-exchange-release.jks')
            storePassword 'aX8Hi9?$'
            keyAlias 'CryptoExchange'
            keyPassword 'aX8Hi9?$'
        }
        release {
            storeFile file('../crypto-exchange-release.jks')
            storePassword 'aX8Hi9?$'
            keyAlias 'CryptoExchange'
            keyPassword 'aX8Hi9?$'
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            resValue("string", "app_host", "exchange.playground.unitex.one")
            signingConfig signingConfigs.release
            firebaseAppDistribution
                    {
                        artifactType = "APK"
                        releaseNotesFile = "$project.rootDir/distribution/releasenotes_release.txt"
                        testersFile = "$project.rootDir/distribution/testers.txt"
                    }
        }

        debug {
            debuggable true
            resValue("string", "app_host", "exchange.playground.unitex.one")
            signingConfig signingConfigs.debug
            firebaseAppDistribution
                    {
                        artifactType = "APK"
                        releaseNotesFile = "$project.rootDir/distribution/releasenotes_debug.txt"
                        testersFile = "$project.rootDir/distribution/testers.txt"
                    }
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // Kotlin
    implementation(kotlin)

    // AndroidX
    implementation androidX.values()

    // Moxy Community(MVP)
    kapt(kaptMoxy)
    implementation moxycommunity.values()

    // Navigation Component (Navigation)
    implementation navigationcomponent.values()

    // RxJava (Async)
    implementation rx.values()

    // Retrofit (Network)
    implementation retrofit.values()

    // LeakCanary

    // Material Components
    implementation(materialComponents)

    // Glide
    implementation(glide)
    kapt(kaptGlide)

    // Firebase BoM
    implementation platform(firebaseBoM)

    // Firebase
    implementation firebase.values()

    //Dagger2
    implementation(dagger)
    kapt(kaptDagger)

    //SwipeToRefresh
    implementation(swipetorefresh)

    //SwipeToRefresh
    implementation(swipetorefresh)

    //TradingView
    implementation(tradingView)

    implementation "com.innowise-group.sdk:crypto-exchange:0.0.13"
}